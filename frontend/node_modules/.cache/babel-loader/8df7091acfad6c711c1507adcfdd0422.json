{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport { combineReducers } from \"redux\";\nimport headerReducer from \"./common/Header/state/headerReducer\";\nimport productReducer from \"./product/state/ProductReducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./saga/rootSaga\"; // create the saga middleware\n\nconst sagaMiddleware = createSagaMiddleware(); //combining all the reducer existing\n\nconst allReducer = combineReducers({\n  header: headerReducer,\n  product: productReducer\n});\nconst store = createStore(allReducer, compose(applyMiddleware(sagaMiddleware), window.devToolsExtension ? window.devToolsExtension() : f => f)); //running the saga using saga middleware\n\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/home/ranjan/Desktop/easyshop/frontend/src/store.js"],"names":["createStore","applyMiddleware","compose","combineReducers","headerReducer","productReducer","createSagaMiddleware","rootSaga","sagaMiddleware","allReducer","header","product","store","window","devToolsExtension","f","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AAEA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,iBAArB,C,CAEA;;AACA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C,C,CAEA;;AACA,MAAMG,UAAU,GAAGN,eAAe,CAAC;AACjCO,EAAAA,MAAM,EAAEN,aADyB;AAEjCO,EAAAA,OAAO,EAAEN;AAFwB,CAAD,CAAlC;AAKA,MAAMO,KAAK,GAAGZ,WAAW,CACvBS,UADuB,EAEvBP,OAAO,CACLD,eAAe,CAACO,cAAD,CADV,EAELK,MAAM,CAACC,iBAAP,GAA2BD,MAAM,CAACC,iBAAP,EAA3B,GAAyDC,CAAD,IAAOA,CAF1D,CAFgB,CAAzB,C,CAQA;;AACAP,cAAc,CAACQ,GAAf,CAAmBT,QAAnB;AACA,eAAeK,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport { combineReducers } from \"redux\";\nimport headerReducer from \"./common/Header/state/headerReducer\";\nimport productReducer from \"./product/state/ProductReducer\";\n\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./saga/rootSaga\";\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n//combining all the reducer existing\nconst allReducer = combineReducers({\n  header: headerReducer,\n  product: productReducer,\n});\n\nconst store = createStore(\n  allReducer,\n  compose(\n    applyMiddleware(sagaMiddleware),\n    window.devToolsExtension ? window.devToolsExtension() : (f) => f\n  )\n);\n\n//running the saga using saga middleware\nsagaMiddleware.run(rootSaga);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}